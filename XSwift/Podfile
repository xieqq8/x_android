source 'https://github.com/CocoaPods/Specs.git'
platform:ios,'9.0'

#用到的第三方库用动态框架的形式集成进来
use_frameworks!   #swift写的库oc调用加这个 还要再加上头文件

target ‘XSwift’ do
    #Swift
    pod 'Alamofire', '~> 4.4'
    
#    pod 'AFNetworking' #,'~> 2.5.0'
#    pod 'MBProgressHUD'#, "~> 0.9"
#    pod 'SVProgressHUD' #,'~> 1.0'
#    pod 'BlocksKit'
#    pod 'FMDB' #,'~> 2.3'


#   https://github.com/hilen/TimedSilver
    pod 'TimedSilver', '1.0.0'
    pod 'ReactiveCocoa', '~> 5.0.0'
end

#1、一般Podfile文件中都有这么一行：
#platform :ios, ’9.0’
#Xcode创建完工程Deployment Info中：
#Deployment Target 现在最低可以选择 8.0
#
#那么问题来了：
#
#（1）iOS开发使用cocoapods创建的Podfile文件中的platform有什么用？
#
#（2）它指定的系统版本和Xcode项目中指定的系统版本有什么关系？互相会冲突吗？（比如Alamofire导入需要9.0,我在Podfile文件中设为9.0，但是在项目中Deployment Target设为8.0，会出现什么问题吗？）
#
#（3）它和第三方库什么关系？(比如有些库，在platform指定为‘7.0’的时候不能install，在‘9.0’的时候就可以)
#答案：以Alamofire为例，此框架说明最低支持 ios 9则：
#（1）Podfile中 platform :ios, '9.0' 必须大于等于9.0才可以导入到项目中。
#（2）导入到项目中后，Deployment Target 必须大于等于9.0才可以使用。
#2、“~>”podFilel里经常见到这个符号，SDK又分稳定版和测试版，想用稳定版的话，就得注意这个符号了，例如：
##融云
#pod 'RongCloudIM/IMLib','~> 2.8.4'
#pod 'RongCloudIM/IMKit','~> 2.8.4'
#这个是融云的2.8.4稳定版，但是加上这个符号，会直接pod最新版解释为：“>”存在大于这个版本时更新新版。
#想用稳定版的话，请去掉这个符号
##融云
#pod 'RongCloudIM/IMLib','2.8.4'
#pod 'RongCloudIM/IMKit','2.8.4'

#下面是podfile指定版本号时的逻辑运算符：
#Besides no version, or a specific one, it is also possible to use logical operators:
#'> 0.1'    Any version higher than 0.1         0.1以上
#'>= 0.1'   Version 0.1 and any higher version  0.1以上，包括0.1
#'< 0.1'    Any version lower than 0.1          0.1以下
#'<= 0.1'   Version 0.1 and any lower version   0.1以下，包括0.1
#In addition to the logic operators CocoaPods has an optimisic operator ~>:
#'~> 0.1.2' Version 0.1.2 and the versions up to 0.2, not including 0.2 and higher  0.2以下(不含0.2)，0.1.2以上（含0.1.2）
#'~> 0.1' Version 0.1 and the versions up to 1.0, not including 1.0 and higher      1.0以下(不含1.0)，0.1以上（含0.1）
#'~> 0' Version 0 and higher, this is basically the same as not having it.          0和以上，等于没有此约束
#

